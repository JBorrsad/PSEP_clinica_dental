<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Server.API</name>
    </assembly>
    <members>
        <member name="M:Server.API.Controllers.AppointmentsController.GetAppointments">
            <summary>
            Obtiene todas las citas
            </summary>
            <returns>Lista de citas</returns>
        </member>
        <member name="M:Server.API.Controllers.AppointmentsController.GetAppointment(System.Int64)">
            <summary>
            Obtiene una cita específica por su ID
            </summary>
            <param name="id">ID de la cita</param>
            <returns>Detalles de la cita</returns>
        </member>
        <member name="M:Server.API.Controllers.AppointmentsController.GetAvailableSlots(System.DateTime)">
            <summary>
            Obtiene los horarios disponibles para una fecha específica
            </summary>
            <param name="date">Fecha a consultar</param>
            <returns>Lista de horarios disponibles</returns>
        </member>
        <member name="M:Server.API.Controllers.AppointmentsController.GetAppointmentsForDate(System.DateTime)">
            <summary>
            Obtiene las citas programadas para una fecha específica
            </summary>
            <param name="date">Fecha a consultar en formato YYYY-MM-DD</param>
            <returns>Lista de citas para esa fecha</returns>
        </member>
        <member name="M:Server.API.Controllers.AppointmentsController.GetPendingAppointments">
            <summary>
            Obtiene las solicitudes de cita pendientes (no confirmadas)
            </summary>
            <returns>Lista de citas pendientes</returns>
        </member>
        <member name="M:Server.API.Controllers.AppointmentsController.GetAppointmentHistory">
            <summary>
            Obtiene el historial de solicitudes de citas (confirmadas o canceladas)
            </summary>
            <returns>Lista del historial de citas</returns>
        </member>
        <member name="M:Server.API.Controllers.AppointmentsController.ConfirmAppointment(System.Int64)">
            <summary>
            Confirma una cita existente
            </summary>
            <param name="id">ID de la cita a confirmar</param>
            <returns>La cita actualizada</returns>
        </member>
        <member name="M:Server.API.Controllers.AppointmentsController.CancelAppointment(System.Int64)">
            <summary>
            Cancela una cita existente
            </summary>
            <param name="id">ID de la cita a cancelar</param>
            <returns>La cita actualizada</returns>
        </member>
        <member name="M:Server.API.Controllers.AppointmentsController.PutAppointment(System.Int64,Common.Models.Appointment)">
            <summary>
            Actualiza una cita existente
            </summary>
            <param name="id">ID de la cita a actualizar</param>
            <param name="appointment">Datos actualizados de la cita</param>
            <returns>No Content si la operación es exitosa</returns>
        </member>
        <member name="M:Server.API.Controllers.AppointmentsController.PostAppointment(Common.Models.Appointment)">
            <summary>
            Crea una nueva cita
            </summary>
            <param name="appointment">Datos de la nueva cita</param>
            <returns>La cita creada con su ID asignado</returns>
        </member>
        <member name="M:Server.API.Controllers.AppointmentsController.DeleteAppointment(System.Int64)">
            <summary>
            ELIMINACIÓN EXTREMA: Borra completamente la cita de todas las fuentes posibles
            </summary>
        </member>
        <member name="M:Server.API.Controllers.AppointmentsController.GetPatientAppointments(System.String)">
            <summary>
            Obtiene las citas de un paciente específico
            </summary>
            <param name="name">Nombre del paciente</param>
            <returns>Lista de citas del paciente</returns>
        </member>
        <member name="M:Server.API.Controllers.AuthController.Login(Server.API.Controllers.LoginModel)">
            <summary>
            Inicia sesión y genera un token JWT
            </summary>
            <param name="model">Credenciales de inicio de sesión</param>
            <returns>Token JWT si las credenciales son válidas</returns>
        </member>
        <member name="M:Server.API.Controllers.AuthController.ValidateToken(Server.API.Controllers.ValidateTokenModel)">
            <summary>
            Valida un token JWT
            </summary>
            <returns>Estado de la validación del token</returns>
        </member>
        <member name="M:Server.API.Controllers.StaffController.Login(Server.API.Controllers.LoginModel)">
            <summary>
            Inicia sesión para el personal de la clínica
            </summary>
            <param name="model">Credenciales de inicio de sesión</param>
            <returns>Token JWT si las credenciales son válidas</returns>
        </member>
        <member name="M:Server.API.Controllers.StaffController.GetAllAppointments">
            <summary>
            Obtiene todas las citas
            </summary>
            <returns>Lista de todas las citas</returns>
        </member>
        <member name="M:Server.API.Controllers.StaffController.GetAppointmentsByDate(System.String)">
            <summary>
            Obtiene todas las citas para una fecha específica
            </summary>
            <param name="date">Fecha en formato yyyy-MM-dd</param>
            <returns>Lista de citas para la fecha indicada</returns>
        </member>
        <member name="M:Server.API.Controllers.StaffController.GetPendingAppointments">
            <summary>
            Obtiene todas las citas pendientes
            </summary>
            <returns>Lista de citas pendientes</returns>
        </member>
        <member name="M:Server.API.Controllers.StaffController.UpdateAppointmentStatus(System.Int64,Server.API.Controllers.AppointmentStatusModel)">
            <summary>
            Actualiza el estado de una cita
            </summary>
            <param name="id">ID de la cita</param>
            <param name="model">Modelo con el nuevo estado</param>
            <returns>Cita actualizada</returns>
        </member>
        <member name="M:Server.API.Controllers.StaffController.DeleteAppointment(System.Int64)">
            <summary>
            Elimina una cita (rechaza una solicitud)
            </summary>
            <param name="id">ID de la cita</param>
            <returns>Resultado de la operación</returns>
        </member>
        <member name="M:Server.API.Controllers.StaffController.GetAppointmentHistory">
            <summary>
            Obtiene el historial de solicitudes
            </summary>
            <returns>Lista del historial de solicitudes</returns>
        </member>
        <member name="T:Server.API.Middleware.JwtMiddleware">
            <summary>
            Middleware para validación de tokens JWT en peticiones
            </summary>
        </member>
    </members>
</doc>
